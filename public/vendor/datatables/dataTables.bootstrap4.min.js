/*!
 DataTables Bootstrap 4 integration
 Â©2011-2017 SpryMedia Ltd - datatables.net/license
*/
(function (factory) {
   "function" === typeof define && define.amd
      ? define(["jquery", "datatables.net"], function ($) {
         return factory($, window, document);
      })
      : "object" === typeof exports
         ? module.exports = function (root, $) {
            if (!root) {
               root = window;
            }

            if (!$ || !$.fn.dataTable) {
               $ = require("datatables.net")(root, $).$;
            }

            return factory($, root, root.document);
         }
         : factory(jQuery, window, document);
})(function ($, window, document) {
   var DataTable = $.fn.dataTable;

   $.extend(true, DataTable.defaults, {
      dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>' +
         '<"row"<"col-sm-12"tr>>' +
         '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
      renderer: "bootstrap"
   });

   $.extend(DataTable.ext.classes, {
      sWrapper: "dataTables_wrapper dt-bootstrap4",
      sFilterInput: "form-control form-control-sm",
      sLengthSelect: "custom-select custom-select-sm form-control form-control-sm",
      sProcessing: "dataTables_processing card",
      sPageButton: "paginate_button page-item"
   });

   DataTable.ext.renderer.pageButton.bootstrap = function (settings, host, idx, buttons, page, pages) {
      var api = new DataTable.Api(settings);
      var classes = settings.oClasses;
      var language = settings.oLanguage.oPaginate;
      var aria = settings.oLanguage.oAria.paginate || {};
      var btnDisplay, btnClass, counter = 0;

      var attach = function (container, buttons) {
         var i, ien, node, button;
         var clickHandler = function (e) {
            e.preventDefault();
            if (!$(e.currentTarget).hasClass('disabled')) {
               api.page(e.data.action).draw('page');
            }
         };

         for (i = 0, ien = buttons.length; i < ien; i++) {
            button = buttons[i];

            if (Array.isArray(button)) {
               attach(container, button);
            } else {
               btnDisplay = '';
               btnClass = '';

               switch (button) {
                  case 'ellipsis':
                     btnDisplay = '&#x2026;';
                     btnClass = 'disabled';
                     break;

                  case 'first':
                     btnDisplay = language.sFirst;
                     btnClass = button + (page > 0 ? '' : ' disabled');
                     break;

                  case 'previous':
                     btnDisplay = language.sPrevious;
                     btnClass = button + (page > 0 ? '' : ' disabled');
                     break;

                  case 'next':
                     btnDisplay = language.sNext;
                     btnClass = button + (page < pages - 1 ? '' : ' disabled');
                     break;

                  case 'last':
                     btnDisplay = language.sLast;
                     btnClass = button + (page < pages - 1 ? '' : ' disabled');
                     break;

                  default:
                     btnDisplay = button + 1;
                     btnClass = page === button ? 'active' : '';
                     break;
               }

               if (btnDisplay) {
                  node = $('<li>', {
                     'class': classes.sPageButton + ' ' + btnClass,
                     'id': idx === 0 && typeof button === 'string' ? settings.sTableId + '_' + button : null
                  })
                     .append($('<a>', {
                        'href': '#',
                        'aria-controls': settings.sTableId,
                        'aria-label': aria[button],
                        'data-dt-idx': counter,
                        'tabindex': settings.iTabIndex,
                        'class': 'page-link'
                     })
                        .html(btnDisplay))
                     .appendTo(container);

                  settings.oApi._fnBindAction(node, { action: button }, clickHandler);
                  counter++;
               }
            }
         }
      };

      try {
         var activeEl = $(host).find(document.activeElement).data('dt-idx');
      } catch (e) { }

      attach($(host).empty().html('<ul class="pagination"/>').children('ul'), buttons);

      if (activeEl !== undefined) {
         $(host).find('[data-dt-idx=' + activeEl + ']').trigger('focus');
      }
   };

   return DataTable;
});
$(document).ready(function () {
   $("tr").on("click", function () {
      $("tr").removeClass("selected"); // Hapus kelas 'selected' dari semua baris
      $(this).addClass("selected"); // Tambahkan kelas 'selected' pada baris yang diklik
   });
});